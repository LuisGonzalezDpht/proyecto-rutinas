<!-- App.vue -->

<script setup lang="ts">
import { marked } from 'marked'

// Ya no necesitas importar ref, computed, watch, etc. - se auto-importan!
const dialogVisible = ref(false)
const counter = ref(0)

// Ejemplo de computed auto-importado
const doubleCounter = computed(() => counter.value * 2)

// VueUse - Detectar modo oscuro del sistema
const isDark = useDark()
const toggleDark = useToggle(isDark)

// VueUse - Estado online/offline
const { isOnline } = useOnline()

// VueUse - Informaci√≥n de la bater√≠a
const { charging, level } = useBattery()

// VueUse - Posici√≥n del mouse
const { x: mouseX, y: mouseY } = useMouse()

// VueUse - LocalStorage reactivo
const storedName = useLocalStorage('user-name', 'Usuario')

// VueUse - Clipboard
const { copy, copied, isSupported: clipboardSupported } = useClipboard()

// Markdown content - Cargado desde archivo en assets
const markdownContent = ref('')

// Cargar contenido desde archivo al montar el componente
onMounted(async () => {
  try {
    const module = await import('./assets/content.md?raw')
    markdownContent.value = module.default
  } catch (error) {
    console.error('Error cargando markdown:', error)
    markdownContent.value = '# Error\nError al cargar el contenido desde assets'
  }
})

// Convertir markdown a HTML
const htmlContent = computed(() => marked(markdownContent.value))

// Funci√≥n para incrementar contador
const increment = () => {
  counter.value++
}

// Funci√≥n para copiar texto
const copyToClipboard = async (text: string) => {
  await copy(text)
}
</script>

<template>
    <div class="min-h-screen bg-gray-50 dark:bg-gray-900 p-4">
      <div class="max-w-4xl mx-auto space-y-6">
        
        <!-- Header -->
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6">
          <div class="flex items-center justify-between mb-4">
            <div>
              <h1>üöÄ Proyecto Rutinas</h1>
              <p>TailwindCSS + PrimeVue + VueUse + Marked + Auto-Import + Estilos Globales</p>
            </div>
            <Button 
              @click="toggleDark()" 
              :label="isDark ? '‚òÄÔ∏è' : 'üåô'" 
              severity="secondary"
              size="small"
            />
          </div>
        </div>

        <!-- Demostraci√≥n de Estilos Globales -->
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6">
          <h2>üìù Demostraci√≥n de Estilos Globales HTML</h2>
          
          <!-- Encabezados -->
          <div class="mb-8">
            <h3>Encabezados</h3>
            <h1>Encabezado H1 - T√≠tulo Principal</h1>
            <h2>Encabezado H2 - Subt√≠tulo</h2>
            <h3>Encabezado H3 - Secci√≥n</h3>
            <h4>Encabezado H4 - Subsecci√≥n</h4>
            <h5>Encabezado H5 - Apartado</h5>
            <h6>Encabezado H6 - Subapartado</h6>
          </div>

          <!-- Texto y p√°rrafos -->
          <div class="mb-8">
            <h3>Texto y P√°rrafos</h3>
            <p>
              Este es un p√°rrafo normal con texto que demuestra el estilo base aplicado autom√°ticamente. 
              Incluye <strong>texto en negrita</strong>, <em>texto en cursiva</em>, y <small>texto peque√±o</small>.
            </p>
            <p>
              Tambi√©n podemos usar <mark>texto resaltado</mark> y elementos como <kbd>Ctrl+C</kbd> para 
              mostrar combinaciones de teclas.
            </p>
          </div>

          <!-- Enlaces -->
          <div class="mb-8">
            <h3>Enlaces</h3>
            <p>
              Aqu√≠ tienes un <a href="#ejemplo">enlace de ejemplo</a> que muestra los estilos aplicados 
              autom√°ticamente con hover y estados visitados.
            </p>
          </div>

          <!-- Listas -->
          <div class="mb-8">
            <h3>Listas</h3>
            <h4>Lista no ordenada:</h4>
            <ul>
              <li>Primer elemento de la lista</li>
              <li>Segundo elemento con sublista:
                <ul>
                  <li>Subelemento 1</li>
                  <li>Subelemento 2</li>
                </ul>
              </li>
              <li>Tercer elemento</li>
            </ul>

            <h4>Lista ordenada:</h4>
            <ol>
              <li>Primer paso</li>
              <li>Segundo paso</li>
              <li>Tercer paso</li>
            </ol>
          </div>

          <!-- C√≥digo -->
          <div class="mb-8">
            <h3>Elementos de C√≥digo</h3>
            <p>C√≥digo inline: <code>const mensaje = 'Hola mundo';</code></p>
            
            <h4>Bloque de c√≥digo:</h4>
            <pre><code>function saludar(nombre) {
  return `Hola, ${nombre}!`;
}

console.log(saludar('Mundo'));</code></pre>
          </div>

          <!-- Citas -->
          <div class="mb-8">
            <h3>Citas</h3>
            <blockquote>
              "Los estilos globales con Tailwind CSS permiten mantener la consistencia 
              visual mientras aprovechamos la flexibilidad del framework."
            </blockquote>
          </div>

          <!-- Separador -->
          <hr>

          <!-- Tabla -->
          <div class="mb-8">
            <h3>Tabla</h3>
            <table>
              <thead>
                <tr>
                  <th>Elemento</th>
                  <th>Descripci√≥n</th>
                  <th>Estado</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>Encabezados</td>
                  <td>H1 a H6 con estilos autom√°ticos</td>
                  <td>‚úÖ Implementado</td>
                </tr>
                <tr>
                  <td>P√°rrafos</td>
                  <td>Texto base con espaciado</td>
                  <td>‚úÖ Implementado</td>
                </tr>
                <tr>
                  <td>Enlaces</td>
                  <td>Estilos con hover y estados</td>
                  <td>‚úÖ Implementado</td>
                </tr>
              </tbody>
            </table>
          </div>

          <!-- Formulario -->
          <div class="mb-8">
            <h3>Elementos de Formulario</h3>
            <div class="space-y-4 max-w-md">
              <div>
                <label for="nombre">Nombre:</label>
                <input type="text" id="nombre" placeholder="Ingresa tu nombre">
              </div>
              <div>
                <label for="email">Email:</label>
                <input type="email" id="email" placeholder="tu@email.com">
              </div>
              <div>
                <label for="mensaje">Mensaje:</label>
                <textarea id="mensaje" rows="3" placeholder="Escribe tu mensaje aqu√≠..."></textarea>
              </div>
              <button type="button">Enviar Formulario</button>
            </div>
          </div>

          <!-- Detalles -->
          <div class="mb-8">
            <h3>Elementos Interactivos</h3>
            <details>
              <summary>Haz clic para ver m√°s detalles</summary>
              <p>Este contenido se muestra cuando se expande el elemento details. 
              Los estilos se aplican autom√°ticamente tanto al summary como al contenido.</p>
              <ul>
                <li>Elemento de lista dentro de details</li>
                <li>Otro elemento con <code>c√≥digo inline</code></li>
              </ul>
            </details>
          </div>
        </div>

      <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
        
        <!-- VueUse Examples -->
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6">
          <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">
            üéØ VueUse Examples
          </h2>
          
          <div class="space-y-4">
            <!-- Counter -->
            <div class="bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg">
              <h3 class="font-medium text-blue-900 dark:text-blue-100 mb-2">Contador Reactivo</h3>
              <div class="flex items-center gap-3">
                <Button @click="increment" label="+" size="small" severity="info" />
                <span class="font-mono text-lg">{{ counter }}</span>
                <span class="text-sm text-gray-600 dark:text-gray-400">(x2: {{ doubleCounter }})</span>
              </div>
            </div>

            <!-- System Info -->
            <div class="bg-green-50 dark:bg-green-900/20 p-4 rounded-lg">
              <h3 class="font-medium text-green-900 dark:text-green-100 mb-2">Estado del Sistema</h3>
              <div class="space-y-2 text-sm">
                <div class="flex justify-between">
                  <span>Conexi√≥n:</span>
                  <span :class="isOnline ? 'text-green-600' : 'text-red-600'">
                    {{ isOnline ? 'üü¢ Online' : 'üî¥ Offline' }}
                  </span>
                </div>
                <div class="flex justify-between">
                  <span>Bater√≠a:</span>
                  <span>{{ Math.round((level || 0) * 100) }}% {{ charging ? 'üîå' : 'üîã' }}</span>
                </div>
                <div class="flex justify-between">
                  <span>Mouse:</span>
                  <span class="font-mono">{{ mouseX }}, {{ mouseY }}</span>
                </div>
              </div>
            </div>

            <!-- LocalStorage -->
            <div class="bg-purple-50 dark:bg-purple-900/20 p-4 rounded-lg">
              <h3 class="font-medium text-purple-900 dark:text-purple-100 mb-2">LocalStorage</h3>
              <div class="flex gap-2">
                <input 
                  v-model="storedName" 
                  class="flex-1 px-3 py-1 border rounded text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white"
                  placeholder="Tu nombre"
                />
                <Button 
                  @click="copyToClipboard(storedName)" 
                  :label="copied ? '‚úÖ' : 'üìã'" 
                  size="small"
                  :disabled="!clipboardSupported"
                />
              </div>
              <p class="text-xs text-gray-500 mt-1">Se guarda autom√°ticamente en localStorage</p>
            </div>
          </div>
        </div>

        <!-- Markdown Example -->
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6">
          <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">
            üìù Markdown con Marked
          </h2>
          
          <div class="prose prose-sm dark:prose-invert max-w-none">
            <div v-html="htmlContent" class="markdown-content"></div>
          </div>
          
          <div class="mt-4 pt-4 border-t dark:border-gray-700">
            <Button 
              @click="dialogVisible = true" 
              label="Ver Markdown Raw" 
              severity="secondary"
              size="small"
            />
          </div>
        </div>
      </div>

      <!-- Dialog -->
      <Dialog 
        v-model:visible="dialogVisible"
        header="üìù Contenido Markdown Raw" 
        :style="{ width: '50rem' }"
        :modal="true"
      >
        <textarea 
          v-model="markdownContent"
          class="w-full h-64 p-3 border rounded font-mono text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white"
          placeholder="Escribe tu markdown aqu√≠..."
        ></textarea>
        <p class="text-xs text-gray-500 mt-2">
          Edita el markdown y ver√°s los cambios en tiempo real
        </p>
        
        <template #footer>
          <Button 
            label="Cerrar" 
            @click="dialogVisible = false" 
          />
        </template>
      </Dialog>
    </div>
  </div>
</template>

<style scoped></style>
